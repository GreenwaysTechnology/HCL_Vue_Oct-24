				Vue.js
.....................................................................................
Pre Knowledge:

1.HTML 5
2.CSS 3
3.Javascript -ES 5 and ES 6
4.Node js fundamentals - npm

Nice to have
react or angular

Lab setup:
node.js
vs code
.....................................................................................
What is vue.js?
  Vue.js is a javascript framework for building user interfaces.

User interfae:
1.desk top app
2.web apps which is running browser
3.Mobile apps
   native
   browser based
   hybrid app

We are going to build browser based web apps.

Browser based web apps using js -  client side apps

1.JQuery
2.Angular js
3.React js
4.Angular 2.x 
5.Vue js
etc....

javascript frameworks for building server side apps -node.js 
1.express js
2.hapi js
3.Moleculer
4.Loopback
5.nest js


Vue is more popular for building browser based web applications.

Before understanding vue, we need to know the different types of web apps.

What is web and history?
 Web is distributed application, distributed means app functionality is distributed among machines and which services are accessed by network.

History:
https://home.web.cern.ch/science/computing/birth-web..

Technologies:

1.HTML 
2.HTTP protocal
3.Web server - Next Computer and Next Operating System
4.Line Mode web browser and editor



Types of Web Applications:

1.Static web apps - 1989 to 1995
   -HTML
   Web app is prepared by hand written html documents, and hosted on server.

2.Dynamic Content Generation web apps -1996 to till date

   Web app is prepared by the special program called "cgi" , hosted on server.
   -CGI - C/Perl
   -J2EE - Java,JavaServlets
   -ASP  - Vbscript,VB
   -PHP  - Php

3.Web Services - ECOMMERCE(B2 to B2) - 1998 To till date
 DATA is exchanged between two systems 
  Common data formats
   -XML - SOAP web services
   -Multi format(JSON)- RESTFull Web Services / GraphQL 

.....................................................................................
			Client Side Web App
....................................................................................

1.In 2006, w3c published new spec called "HTML 5",as part of HTML5 , W3C Published new web spec called "Single Page web App" /SPA.

 html page is prepared dynamically at client side by the browser using js, data needed for html page is accessed with help of "REST" api.


After introduction of SPA technology many frameworks and libs were created.

1.Mustache.js
2.Angular.js
3.React
4.Angular
5.Vue.js

....................................................................................
			Vue js

Vue.js is javascript client side spa framework.

.....................................................................................
			Vue as SPA framework - Client side technology
.....................................................................................

Stack:
1.html 5
2.css 3
3.js 
.....................................................................................
			   DOM Specifciation
.....................................................................................

DOM programming:

  DOM is specification for building client side web apps, DOM spec introduced by w3c 
  DOM is implemented by js and html.

What is js and why js?

  JS is programming language , created by netscap communication , to manipulate HTML
  Document at browser.
  html is generated by server and sent to client(browser), the browser just display
  html, after display generally we cant modify the html.
  Js was created to update html after display(render) - Dynamic html technology.


if you want to understand how dom works, we need to understand how html works.


HTML:
  It is also one of the programming language.


Like other languages such as c program

1.source code
  hello.c
2.compile the code
  hello.obj - compiled code
3.execute the code
  on runtime we execute the code

.....................................................................................
			How browser renders HTML
		    Internals of HTML Representation
....................................................................................

HTML is programming language -  DSL pl /declarative pl.


index.html -source code

<html>
<head></head>
<title><title>
<body>
  <div>
     <h1>Welcome</h1>
  </div>
</body>
</html>
|
-------------------Browser
loader---LOAD Code into browser
 |
   from file: or http:
 |

Parser : Parser is special compiler which converts source into lexcial tree(string tree)
 |
body
  div
     h1
        Welcome 
     h1
  div
body
|
 Complier-Compilation : Convert this into assembly
|
body -load xxx
  div
     h1
        Welcome 
     h1
  div
body
|
.....................................................................................
			Runtime  -  Allocate Memory for HTML
.....................................................................................	
HTML Execution engine : Request Os ,to allocate memory :Runtime

-LinkedList - c
body -Node
  div -Node
     h1 -Node
        Welcome -Node
     h1
  div
body

-Nodes are connected each other in hierachical structure(tree)
 
Linking the Nodes: Tree (c)

body  -Node
  |
  div -Node
    |
     h1 -Node
      |
        Welcome -Node
        |
     h1
  div
body
|
Layout/Paint Engine: will convert nodes into pxs : final output
Layout/Paint Engine: will convert nodes into pxs : final output
...................................................................................
			Nets cap and HTML Tree

Netscap started a project, to access rendered tree via program, to process(add,update,delete,iterate)

Netscap initally decided to introduce java program to access the tree, but since java was not suitable, netscap decided to create java like programming language - birth of javascript.

Java script language looks the HTML tree as objects - Object oriented HTML, every html element can be thought as object. - body - body object, div element-div object

Once the html has been rendered by the web browser, can we change the html(adding new element,updating existing element content,removing node,listing nodes).

The company called Netscap communcation, the second web browser creator after line mode web browser.

The NetsCap communication introduced the browser called netscap navigator , today firefox.

The netscap introduced a new technology called how to change html after rendering.

In 1996,Netscap communication,Started an RND project called "How to manipulate the tree"

Tree is written in c language,then we need another c program to communicate.

But NETSCAP decided not to use C pl.

Netscap wanted to put java like implementation inside browser to manipulate "Tree".

                        "The birth of Javascript"

How to access nodes from javascript engine?
  
One spec was published ,As per that spec - DOM
 "Document Object Model"
    -How to represent document(elements/nodes) in object oriented way.->DOM

 "Documents can be represented as Objects" : Object oriented Document Programming.

According to DOM?

Any html element is represented as "Node" inside browser engine, "Object" as inside javascript engine.

div = DIV object
.............................................................................................
				Birth of Frameworks and libs

...................................................................................
			Nets cap and HTML Tree

Netscap started a project, to access rendered tree via program, to process(add,update,delete,iterate)

Netscap initally decided to introduce java program to access the tree, but since java was not suitable, netscap decided to create java like programming language - birth of javascript.

Java script language looks the HTML tree as objects - Object oriented HTML, every html element can be thought as object. - body - body object, div element-div object

Once the html has been rendered by the web browser, can we change the html(adding new element,updating existing element content,removing node,listing nodes).

The company called Netscap communcation, the second web browser creator after line mode web browser.

The NetsCap communication introduced the browser called netscap navigator , today firefox.

The netscap introduced a new technology called how to change html after rendering.

In 1996,Netscap communication,Started an RND project called "How to manipulate the tree"

Tree is written in c language,then we need another c program to communicate.

But NETSCAP decided not to use C pl.

Netscap wanted to put java like implementation inside browser to manipulate "Tree".

                        "The birth of Javascript"

How to access nodes from javascript engine?




............................................................................................
How dom works?

index.html           Broser runtime(C program)         Javascript Engine
<h1>Hello</h1>       h1-Node                           h1- Object
			Hello-Node			 Hello Object Property



                Every Html ELEMENT Inside Browser is "C Program"

	        Every Html ELEMENT javascript engine is "Object"


javascript developer ---->uses api --->to communicate Object---->js engine---->browser engine.

.....................................................................................
			Client side web apps and vue js

Vue is client side web app framework.
but
Now a days vue can be used to build server side web apps as well

Types of SPA:

1. Pure spa
    static html + dynamic js
  Drawbacks: 
     which is not search engine ready.

2.Server side rendering - hybrid spa
   index.html is prepared at server along with search engine meta data and js files
  send to the client...
   
Full Stack:
  Building app using one single technology both front end and back end.
eg:
  Next.js
  Front End is react and back end is also react

  Nuxt.js
  Front end is vue and back end is also vue...


1.SSR :Server side Rending
   Full SSR
   Partial SSR - 
   SSR =  Server+ client => SPA(Client) + SERVER

2.SSG/Jamstack
  Static site generation.
  now a days people are building static web sites like 90's web app , in order to     improve high performance.
  Vue.js(Nuxt) can help to build SSG apps
  React.js(Next) can help to build SSG apps

You can use vue+NUXT
Based on ,use case we can pickup any one of the methods to build client side web apps, but most popular one is SPA,SSR

Vue js can be used to build any type of client side web apps(spa,ssr,ssg)
....................................................................................

Vue js Application Types:
.........................

Server side
   SSR,SSG,ISR (Full stack)

client side

1.Standalone script application-SSA
    Enchancing html (generated by server) by adding js/ js lib(jquery)

 if you have traditional web apps written using server side technology like jsp,asp.net,php which uses "js/jquery"

   Vue js is declarative replacement of imperative "jquery"

2.Web components
   Vuejs supports to create web component based architecture applications

3.SPA
   Vue is primarily popular for building spa apps
.....................................................................................
.....................................................................................
			 Getting started with Vue App
....................................................................................

What type of app we are going to build?

1.Standalone Script app
  We will see only basic level.

2.Single page web app
  We will explore very detailed

In case any app type , we need "tool" sets to create app.

There are two major tools we go with building vue.js apps

1.Without build tool
2.With build tool

1.Standalone Script app
   Without build tool.

if you plan without build tool means, you are planning to create 'standalone script'
....................................................................................
		 Project Setup-SSA(Standalone Script Application)
....................................................................................

create Project:

G:\HCL>mkdir vue-ssa

G:\HCL>cd vue-ssa

G:\HCL\vue-ssa>mkdir src

G:\HCL\vue-ssa>code .

Outside src, create index.html file
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue-Application</title>
</head>
<body>
     <h1>Vue SSA </h1>
</body>
</html>
After adding html we need to run html, we need web server.

Vs code has plugin called "live server" which is built in web server- You have to install "live server" plugin(Extensions)

After running, we need to add "vue js" framwork.

in order to integrate vue with existing html

you have to add script which is distributed by vue community via "cdn".

There are two builds:
1.dev build
2.prod build


Dev Build

<script src="https://unpkg.com/vue@3"></script>

You are running a development build of Vue.
Make sure to use the production build (*.prod.js) when deploying for production.

index.html
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vue-legacy</title>
    <!-- This is dev build -->
    <script src="https://unpkg.com/vue@3"></script>
    <!-- This is production build -->
    <!-- <script src="https://unpkg.com/vue@3.1.1/dist/vue.global.prod.js"></script> -->
</head>
<body>
   
</body>

</html>





